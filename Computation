package products;
import java.util.*;
public class Computation{
	static Store s = new Store();
	static Admin a = new Admin();
	static Queue <Double> theTotalPrices = new LinkedList(); 
	static Double totalPrice;
	static Double vatPrice;
	static double pricewCharge = 0;
	
	public static void computationProcess() {
		for (int i = 0; i <= s.orderedQuantity.size(); i++) {
			for(int j = 0; j <= s.orderedPrice.size(); j++) {
				double compute = Store.orderedPrice.poll() * Store.orderedQuantity.poll() ;
				theTotalPrices.offer(compute);
				Store.quan.poll();
			}
		} 
		
		boolean a = true;
		while(a) {
			if(theTotalPrices.size() == 1) {
				totalPrice = theTotalPrices.poll();
				double vat = totalPrice * 0.12;
				vat = Math.round(vat);
				vatPrice = vat;
				a=false;
			}
			else if(theTotalPrices.size() > 1) {
				double price = theTotalPrices.poll();
				while(!theTotalPrices.isEmpty()) {
					if(!theTotalPrices.isEmpty()) {
						price += theTotalPrices.poll();;
						double vat = price * 0.12; 
						if(theTotalPrices.isEmpty()) {
							totalPrice = price;
							vat = Math.round(vat);
							vatPrice = vat;
							break;
						}
					}
				}
				a=false;
			}
		}
		totalWithVat();
	}
	
	public void computationProcessCancel() {
		
			if (!Store.orderedPrice.isEmpty()) {
        while (!theTotalPrices.isEmpty()) {
            double price = theTotalPrices.poll();
            price += theTotalPrices.poll();
            double vat = price * 0.12;
            if (theTotalPrices.isEmpty()) {
                totalPrice = price;
                vat = Math.round(vat);
                vatPrice = vat;
                break;
            }
        }
        totalWithVat();
    }
}
	public static void totalWithVat() {
		double sum = totalPrice + vatPrice;
    	pricewCharge = sum; 
    	Admin.cashOn.offer(pricewCharge);
    	
	}
}
